$types: (
    cuisine: $blue,
    diet: $green,
    category: $orange
);

.tags {
    position: relative;

    display: flex;
    gap: 0.45rem;

    width: 100%;

    &[data-editing='false'] {
        flex-wrap: wrap;
    }

    &[data-editing='true'] {
        flex-direction: column;
    }

    .tagsDisplay {
        flex-shrink: 1;
        width: 100%;

        span {
            margin-right: 0.35rem;

            width: fit-content;

            white-space: nowrap !important;

            line-height: calc($fs-11 + 1.4rem);
        }
    }

    .tagDisplay {
        position: relative;

        padding: 0.35rem 0.75rem 0.35rem 1.6rem;

        font-size: $fs-11;
        text-align: center;

        border-radius: 100vmax;

        @each $type, $color in $types {
            $light-adjusted-color: contrastize($color, 'light');
            $dark-adjusted-color: contrastize($color, 'dark');

            &[data-type='#{$type}'] {
                color: $light-adjusted-color;
                background-color: alpha($light-adjusted-color, 0.1);

                &::before {
                    background-color: $mono-light;
                    box-shadow: 0 0 0 0.15rem $color;

                    scale: 0.9;
                }

                @include dark-mode {
                    color: $dark-adjusted-color;
                    background-color: alpha($dark-adjusted-color, 0.075);
                    border: 1px solid alpha($dark-adjusted-color, 0.25);

                    &::before {
                        background-color: $mono-900;
                        box-shadow: 0 0 0 0.15rem $dark-adjusted-color;
                    }
                }
            }
        }

        &::before {
            content: '';
            position: absolute;
            left: 0.75rem;
            top: 50%;

            height: 0.35rem;
            width: 0.35rem;

            border-radius: 50%;

            translate: 0 -50%;
        }

        // @include dark-mode {
        //     color: $mono-light;
        //     background-color: transparent;
        // }
    }

    ul {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;

        max-width: 15rem;

        .tagEdit {
            display: flex;
            align-items: center;
            gap: 0.25rem;

            width: fit-content;

            padding-right: 0.3rem;

            border: 1px dashed $mono-300;

            border-radius: 0.5rem;

            p {
                padding: 0.35rem 0 0.35rem 0.75rem;

                width: fit-content;

                font-size: $fs-11;
                font-weight: 400;

                cursor: text;

                &:focus {
                    outline: none;
                }

                &[placeholder]:empty:before {
                    content: attr(placeholder);

                    color: currentColor;

                    opacity: 0.6;
                }
            }

            button {
                display: grid;
                place-content: center;

                opacity: 0.5;

                transition: opacity 150ms ease;

                &:hover {
                    opacity: 1;
                }

                svg {
                    height: 100%;
                    width: 100%;

                    scale: 0.9;
                }
            }
            @each $key, $color in $types {
                &[data-type='#{$key}'] {
                    $light-adjusted-color: contrastize($color, 'light');
                    $dark-adjusted-color: contrastize($color, 'dark');

                    color: $light-adjusted-color;
                    border: 1px dashed transparentize($light-adjusted-color, 0.5);
                    text-shadow: 0 0 0.5rem $mono-light;

                    @include dark-mode {
                        color: $dark-adjusted-color;
                        border: 1px dashed transparentize($dark-adjusted-color, 0.5);
                        text-shadow: none;
                    }
                }
            }
        }
    }

    .addTagButtons {
        display: flex;
        gap: 0.5rem;

        padding-bottom: 0.75rem;
        margin-bottom: 0.25rem;

        width: 100%;

        border-bottom: 1px dashed $mono-300;

        @include dark-mode {
            border-bottom: 1px dashed $mono-600;
        }

        &[data-empty='true'] {
            padding-bottom: 0;
            margin-bottom: 0;
            border-bottom: none;

            @include dark-mode {
                border-bottom: none;
            }
        }

        button {
            display: flex;
            justify-content: center;
            align-items: center;

            padding: 0.4rem 0.6rem;

            font-size: $fs-11;
            font-weight: 500;

            border-radius: 0.5rem;

            transition:
                color 150ms ease,
                background-color 150ms ease,
                border 150ms ease;

            span {
                font-weight: 300;
                white-space: pre;
            }

            @each $key, $color in $types {
                &.#{$key} {
                    $light-adjusted-color: contrastize($color, 'light');
                    $dark-adjusted-color: contrastize($color, 'dark');

                    color: $light-adjusted-color;
                    background-color: transparentize($light-adjusted-color, 0.95);
                    border: 1px solid transparentize($light-adjusted-color, 0.75);

                    &:hover {
                        text-shadow: none;
                        color: $mono-light;
                        background-color: $light-adjusted-color;
                        border-color: $light-adjusted-color;
                    }

                    @include dark-mode {
                        color: $dark-adjusted-color;
                        background-color: transparentize($dark-adjusted-color, 0.95);
                        border: 1px solid transparentize($dark-adjusted-color, 0.75);

                        &:hover {
                            color: $mono-light;
                            background-color: $dark-adjusted-color;
                            border-color: $dark-adjusted-color;
                        }
                    }
                }
            }
        }
    }
}
